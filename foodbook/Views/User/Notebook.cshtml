@model List<foodbook.Models.NotebookViewModel>
@{
    ViewData["Title"] = "Sổ tay";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Sổ tay</h1>
            </div>

            <!-- Search and Filter -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" class="form-control" placeholder="Tìm kiếm công thức, trong sổ tay" id="searchInput">
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="d-flex gap-2">
                        <select class="form-select" style="width: auto;">
                            <option>Ngày lưu (Mới nhất)</option>
                            <option>Ngày lưu (Cũ nhất)</option>
                            <option>Tên A-Z</option>
                            <option>Tên Z-A</option>
                        </select>
                        <button class="btn btn-outline-secondary">
                            <i class="fas fa-filter"></i> Lọc công thức
                        </button>
                    </div>
                </div>
            </div>

            <!-- Recipe Grid -->
            <div class="row">
                @if (Model != null && Model.Any())
                {
                    @foreach (var recipe in Model)
                    {
                        <div class="col-md-6 col-lg-4 col-xl-3 mb-4">
                            <div class="card h-100 shadow-sm">
                                <a href="@Url.Action("Detail", "Recipe", new { id = recipe.RecipeId })" class="text-decoration-none">
                                    <img src="@recipe.ThumbnailImg" class="card-img-top" alt="@recipe.RecipeName" style="height: 200px; object-fit: cover;">
                                </a>
                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title">@recipe.RecipeName</h5>
                                    <div class="mt-auto">
                                        <div class="d-flex align-items-center mb-2">
                                            <i class="fas fa-thumbs-up text-primary me-1"></i>
                                            <span class="text-muted">@recipe.LikesCount</span>
                                        </div>
                                        <div class="text-muted mb-2">Độ khó: @recipe.Level</div>
                                        <div class="text-muted mb-3">@recipe.UserName</div>
                                        <div class="d-flex gap-2">
                                            <a href="@Url.Action("Detail", "Recipe", new { id = recipe.RecipeId })" class="btn btn-outline-primary btn-sm flex-fill">
                                                <i class="fas fa-arrow-right"></i> Xem chi tiết
                                            </a>
                                            <button class="btn btn-outline-danger btn-sm" onclick="removeFromNotebook(@recipe.RecipeId)" title="Xóa khỏi sổ tay">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12 text-center py-5">
                        <i class="fas fa-book fa-3x text-muted mb-3"></i>
                        <h4 class="text-muted">Sổ tay trống</h4>
                        <p class="text-muted">Bạn chưa lưu công thức nào vào sổ tay.</p>
                        <a href="@Url.Action("Newsfeed", "Home")" class="btn btn-primary">
                            <i class="fas fa-search"></i> Khám phá công thức
                        </a>
                    </div>
                }
            </div>
</div>

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Font Awesome -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

<style>
.sidebar {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    z-index: 100;
    padding: 48px 0 0;
    box-shadow: inset -1px 0 0 rgba(0, 0, 0, .1);
}

.sidebar .nav-link {
    font-weight: 500;
    color: #333;
}

.sidebar .nav-link.active {
    color: #007bff;
}

.sidebar .nav-link:hover {
    color: #007bff;
}

.sidebar-heading {
    font-size: .75rem;
    text-transform: uppercase;
}

.card {
    transition: transform 0.2s ease-in-out;
}

.card:hover {
    transform: translateY(-2px);
}
</style>

<script>
function removeFromNotebook(recipeId) {
    if (confirm('Bạn có chắc chắn muốn xóa công thức này khỏi sổ tay?')) {
        fetch('@Url.Action("RemoveFromNotebook", "User")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: 'recipeId=' + recipeId
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Remove the card from the page
                const card = document.querySelector(`[onclick="removeFromNotebook(${recipeId})"]`).closest('.col-md-6');
                card.remove();
                
                // Show success message
                showAlert('success', data.message);
            } else {
                showAlert('danger', data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showAlert('danger', 'Có lỗi xảy ra khi xóa công thức');
        });
    }
}

function showAlert(type, message) {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
    alertDiv.style.top = '20px';
    alertDiv.style.right = '20px';
    alertDiv.style.zIndex = '9999';
    alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    document.body.appendChild(alertDiv);
    
    // Auto remove after 3 seconds
    setTimeout(() => {
        if (alertDiv.parentNode) {
            alertDiv.remove();
        }
    }, 3000);
}
</script>
