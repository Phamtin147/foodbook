@model List<foodbook.Models.NewfeedViewModel>

@{
    ViewData["Title"] = "Đã reaction";
}

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-md-3 col-lg-2 d-md-block bg-light sidebar">
            <div class="position-sticky pt-3">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link" href="/Profile/Info">
                            <i class="bi bi-person me-2"></i>
                            Hồ sơ của tôi
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Profile/Followers">
                            <i class="bi bi-people me-2"></i>
                            Người theo dõi
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Profile/Following">
                            <i class="bi bi-person-check me-2"></i>
                            Đang theo dõi
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="/Profile/Reaction">
                            <i class="bi bi-heart me-2"></i>
                            Đã reaction
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <!-- Main content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">
                    <i class="bi bi-heart me-2"></i>
                    Đã reaction
                </h1>
            </div>

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger" role="alert">
                    @TempData["ErrorMessage"]
                </div>
            }

            @if (Model != null && Model.Any())
            {
                <div class="row" id="reactions-container">
                    @foreach (var recipe in Model)
                    {
                        <div class="col-lg-4 col-md-6 mb-4">
                            <div class="card h-100 shadow-sm border-0 rounded-4 overflow-hidden feed-card">
                                <!-- Header với avatar và tên user -->
                                <div class="card-header bg-white border-0 p-3">
                                    <div class="d-flex align-items-center">
                                        <a href="/Profile/Info/@recipe.UserId" class="text-decoration-none">
                                            <img src="@recipe.UserAvatarUrl" alt="Avatar" class="rounded-circle me-2" width="40" height="40" style="object-fit: cover;">
                                        </a>
                                        <div class="flex-grow-1">
                                            <a href="/Profile/Info/@recipe.UserId" class="text-decoration-none text-dark fw-bold">
                                                @recipe.UserName
                                            </a>
                                            <div class="text-muted small">
                                                @recipe.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Link đến chi tiết recipe -->
                                <a href="/Recipe/Detail/@recipe.RecipeId" class="text-decoration-none text-dark feed-link">
                                    <!-- Thumbnail -->
                                    <div class="thumb">
                                        <img src="@recipe.ThumbnailImg" class="card-img-top" alt="@recipe.RecipeName" style="height: 200px; object-fit: cover;">
                                    </div>

                                    <!-- Body -->
                                    <div class="card-body feed-card-body">
                                        <h5 class="card-title fw-bold">@recipe.RecipeName</h5>
                                        <p class="card-text text-muted">@recipe.Description</p>
                                        
                                        <!-- Tags -->
                                        @if (recipe.Tags != null && recipe.Tags.Any())
                                        {
                                            <div class="tag-container">
                                                <div class="tag-list">
                                                    @foreach (var tag in recipe.Tags.Take(3))
                                                    {
                                                        <span class="tag-chip">@tag</span>
                                                    }
                                                    @if (recipe.Tags.Count > 3)
                                                    {
                                                        <span class="tag-show-more-btn">+@(recipe.Tags.Count - 3)</span>
                                                    }
                                                </div>
                                            </div>
                                        }
                                        
                                        <!-- Level -->
                                        <div class="mt-2">
                                            <span class="badge bg-primary">@recipe.Level</span>
                                        </div>
                                    </div>
                                </a>

                                <!-- Các chỉ số tương tác -->
                                <div class="d-flex justify-content-between align-items-center border-top text-muted small feed-actions">
                                    <div class="action"><i class="bi bi-hand-thumbs-up me-1"></i>@recipe.LikesCount</div>
                                    <div class="action"><i class="bi bi-chat me-1"></i>@recipe.CommentsCount</div>
                                    <div class="action"><i class="bi bi-share me-1"></i>@recipe.SharesCount</div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Load more button -->
                <div class="text-center mt-4">
                    <button id="loadMoreBtn" class="btn btn-outline-primary">
                        <i class="bi bi-arrow-down-circle me-2"></i>
                        Tải thêm
                    </button>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-heart display-1 text-muted"></i>
                    <h3 class="mt-3 text-muted">Chưa có reaction nào</h3>
                    <p class="text-muted">Hãy like hoặc bình luận các bài công thức để xem chúng ở đây!</p>
                    <a href="/Home/Newsfeed" class="btn btn-primary">
                        <i class="bi bi-house me-2"></i>
                        Khám phá công thức
                    </a>
                </div>
            }
        </main>
    </div>
</div>

<!-- CSRF Token -->
@Html.AntiForgeryToken()

<script>
    let currentPage = 1;
    const pageSize = 10;
    let isLoading = false;

    document.getElementById('loadMoreBtn')?.addEventListener('click', async function() {
        if (isLoading) return;
        
        isLoading = true;
        this.innerHTML = '<i class="bi bi-hourglass-split me-2"></i>Đang tải...';
        this.disabled = true;

        try {
            currentPage++;
            const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value || '';
            
            const formData = new FormData();
            formData.append('page', currentPage);
            formData.append('pageSize', pageSize);
            formData.append('__RequestVerificationToken', token);

            const response = await fetch('/Profile/LoadMoreReactions', {
                method: 'POST',
                body: formData
            });

            const data = await response.json();

            if (data.success && data.recipes && data.recipes.length > 0) {
                const container = document.getElementById('reactions-container');
                
                data.recipes.forEach(recipe => {
                    const recipeCard = createRecipeCard(recipe);
                    container.insertAdjacentHTML('beforeend', recipeCard);
                });

                // Nếu ít hơn pageSize thì ẩn nút load more
                if (data.recipes.length < pageSize) {
                    this.style.display = 'none';
                }
            } else {
                // Không còn bài nào để tải
                this.style.display = 'none';
            }
        } catch (error) {
            console.error('Error loading more reactions:', error);
            currentPage--; // Rollback page number
        } finally {
            isLoading = false;
            this.innerHTML = '<i class="bi bi-arrow-down-circle me-2"></i>Tải thêm';
            this.disabled = false;
        }
    });

    function createRecipeCard(recipe) {
        // Xử lý tags an toàn
        const tags = recipe.tags || [];
        const tagsHtml = tags.length > 0 
            ? `
                <div class="tag-container">
                    <div class="tag-list">
                        ${tags.slice(0, 3).map(tag => `<span class="tag-chip">${escapeHtml(tag)}</span>`).join('')}
                        ${tags.length > 3 ? `<span class="tag-show-more-btn">+${tags.length - 3}</span>` : ''}
                    </div>
                </div>
            ` 
            : '';

        // Xử lý ngày tháng an toàn
        const createdAt = new Date(recipe.createdAt);
        const dateStr = createdAt.toLocaleDateString('vi-VN');
        const timeStr = createdAt.toLocaleTimeString('vi-VN', {hour: '2-digit', minute: '2-digit'});

        return `
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card h-100 shadow-sm border-0 rounded-4 overflow-hidden feed-card">
                    <!-- Header với avatar và tên user -->
                    <div class="card-header bg-white border-0 p-3">
                        <div class="d-flex align-items-center">
                            <a href="/Profile/Info/${recipe.userId}" class="text-decoration-none">
                                <img src="${escapeHtml(recipe.userAvatarUrl || '/images/default-avatar.jpg')}" alt="Avatar" class="rounded-circle me-2" width="40" height="40" style="object-fit: cover;">
                            </a>
                            <div class="flex-grow-1">
                                <a href="/Profile/Info/${recipe.userId}" class="text-decoration-none text-dark fw-bold">
                                    ${escapeHtml(recipe.userName || 'Ẩn danh')}
                                </a>
                                <div class="text-muted small">
                                    ${dateStr} ${timeStr}
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Link đến chi tiết recipe -->
                    <a href="/Recipe/Detail/${recipe.recipeId}" class="text-decoration-none text-dark feed-link">
                        <!-- Thumbnail -->
                        <div class="thumb">
                            <img src="${escapeHtml(recipe.thumbnailImg || '/images/no-thumbnail.jpg')}" class="card-img-top" alt="${escapeHtml(recipe.recipeName || 'Không có tên')}" style="height: 200px; object-fit: cover;">
                        </div>

                        <!-- Body -->
                        <div class="card-body feed-card-body">
                            <h5 class="card-title fw-bold">${escapeHtml(recipe.recipeName || 'Không có tên')}</h5>
                            <p class="card-text text-muted">${escapeHtml(recipe.description || '')}</p>
                            
                            ${tagsHtml}
                            
                            <!-- Level -->
                            <div class="mt-2">
                                <span class="badge bg-primary">${escapeHtml(recipe.level || 'dễ')}</span>
                            </div>
                        </div>
                    </a>

                    <!-- Các chỉ số tương tác -->
                    <div class="d-flex justify-content-between align-items-center border-top text-muted small feed-actions">
                        <div class="action"><i class="bi bi-hand-thumbs-up me-1"></i>${recipe.likesCount || 0}</div>
                        <div class="action"><i class="bi bi-chat me-1"></i>${recipe.commentsCount || 0}</div>
                        <div class="action"><i class="bi bi-share me-1"></i>${recipe.sharesCount || 0}</div>
                    </div>
                </div>
            </div>
        `;
    }

    // Helper function để escape HTML
    function escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }
</script>

