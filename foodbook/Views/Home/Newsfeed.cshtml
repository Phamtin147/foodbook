@model List<foodbook.Models.NewfeedViewModel>

@{
    ViewData["Title"] = "Newsfeed";
}

<div class="container mt-4 newsfeed-container">
    <div class="row row-cols-1 row-cols-md-2 g-4 newsfeed-grid">
        @if (Model != null && Model.Any())
        {
            foreach (var recipe in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm border-0 rounded-4 overflow-hidden feed-card">

                        <!-- Phần đầu: Avatar + tên + nút theo dõi -->
                        <div class="feed-card-header text-center p-3 pb-0">
                            <div class="user-inline-center">
                                <img src="@recipe.UserAvatarUrl"
                                     onerror="this.onerror=null;this.src='https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png';"
                                     alt="avatar"
                                     class="rounded-circle user-avatar user-avatar-ring"
                                     width="40" height="40"
                                     style="object-fit: cover;">
                                <div class="fw-semibold user-name">@recipe.UserName</div>
                            </div>
                            <button class="btn btn-success rounded-pill px-3 mt-2 follow-btn follow-btn-sm">Theo dõi</button>
                        </div>

                        <!-- Bọc ảnh + nội dung bằng link -->
                        <a asp-controller="Home"
                           asp-action="Recipe_Detail"
                           asp-route-id="@recipe.RecipeId"
                           class="text-decoration-none text-dark feed-link">

                            <!-- Ảnh món ăn -->
                            <div class="thumb mt-2">
                                @if (!string.IsNullOrEmpty(recipe.ThumbnailImg))
                                {
                                    <img src="@recipe.ThumbnailImg"
                                         alt="@recipe.RecipeName">
                                }
                                else
                                {
                                    <img src="https://via.placeholder.com/600x400?text=No+Image"
                                         alt="No Image">
                                }
                            </div>

                    <!-- Nội dung -->
                    <div class="card-body feed-card-body">
                        <h5 class="card-title fw-bold mb-2 feed-title">@recipe.RecipeName</h5>
                        <div class="tag-container mb-3" data-recipe-id="@recipe.RecipeId">
                            <div class="tag-list tag-collapsed">
                                @if (recipe.Tags != null && recipe.Tags.Any())
                                {
                                @foreach (var tag in recipe.Tags.Take(3))
                                {
                                    <span class="tag-chip">@tag</span>
                                }
                                }
                                else
                                {
                                    <span class="tag-chip">#@recipe.Level</span>
                                }
                            </div>
                            @if (recipe.Tags != null && recipe.Tags.Count > 3)
                            {
                                <button class="tag-show-more-btn" onclick="event.stopPropagation(); event.preventDefault(); showTagsPopup(@recipe.RecipeId, '@string.Join("|", recipe.Tags)')">
                                    +@(recipe.Tags.Count - 3)
                                </button>
                            }
                        </div>
                    </div>
                </a>

                            <!-- Các chỉ số tương tác -->
                            <div class="d-flex justify-content-between align-items-center border-top text-muted small feed-actions">
                                <div class="action"><i class="bi bi-hand-thumbs-up me-1"></i>@recipe.LikesCount</div>
                                <div class="action"><i class="bi bi-chat me-1"></i>@recipe.CommentsCount</div>
                                <div class="action"><i class="bi bi-share me-1"></i>@recipe.SharesCount</div>
                            </div>
                        </div>

                    </div>
                }
        }
        else
        {
            <div class="col-12 text-center">
                <p class="text-muted">Không có công thức nào để hiển thị.</p>
            </div>
        }
    </div>
</div>

<!-- Tags Dropdown Popup -->
<div id="tagsDropdown" class="tags-dropdown-popup" style="display: none;">
    <div class="tags-dropdown-content">
        <div class="tags-dropdown-header">
            <span class="tags-dropdown-title">Tất cả phân loại</span>
            <button type="button" class="tags-dropdown-close" onclick="hideTagsPopup()">&times;</button>
        </div>
        <div id="tagsPopupContent" class="tags-dropdown-body">
            <!-- Tags sẽ được load vào đây -->
        </div>
    </div>
</div>

<!-- Bootstrap Icons (nếu chưa có) -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

<script>
function showTagsPopup(recipeId, tagsString) {
    // Parse tags từ string
    const tags = tagsString.split('|');
    
    // Tạo HTML cho tags
    const tagsHtml = tags.map(tag => 
        `<span class="tag-chip">${tag}</span>`
    ).join('');
    
    // Load tags vào popup
    document.getElementById('tagsPopupContent').innerHTML = tagsHtml;
    
    // Tìm vị trí tag đầu tiên của recipe này
    const tagContainer = document.querySelector(`[data-recipe-id="${recipeId}"]`);
    const firstTag = tagContainer.querySelector('.tag-chip');
    
    if (firstTag) {
        const rect = firstTag.getBoundingClientRect();
        const dropdown = document.getElementById('tagsDropdown');
        
        // Đặt vị trí dropdown ngay dưới tag đầu tiên
        dropdown.style.position = 'fixed';
        dropdown.style.top = (rect.bottom + window.scrollY + 5) + 'px';
        dropdown.style.left = rect.left + 'px';
        dropdown.style.zIndex = '9999';
        
        // Hiển thị dropdown
        dropdown.style.display = 'block';
    }
}

function hideTagsPopup() {
    document.getElementById('tagsDropdown').style.display = 'none';
}

// Đóng dropdown khi click outside
document.addEventListener('click', function(event) {
    const dropdown = document.getElementById('tagsDropdown');
    const isClickInside = dropdown.contains(event.target);
    const isTagButton = event.target.classList.contains('tag-show-more-btn');
    
    if (!isClickInside && !isTagButton) {
        hideTagsPopup();
    }
});
</script>
